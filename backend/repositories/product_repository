package repositories

import (
	"database/sql"

	"kitty-entreprises/backend/models"
)

type ProductRepository struct {
	db *sql.DB
}

func NewProductRepository() *ProductRepository {
	return &ProductRepository{db: database.DB}
}

func (r *ProductRepository) Create(p *models.Product) error {
	query := `INSERT INTO products (name, description, price, stock) 
			  VALUES (?, ?, ?, ?)`
	
	result, err := r.db.Exec(query, p.Name, p.Description, p.Price, p.Stock)
	if err != nil {
		return err
	}

	p.ID, _ = result.LastInsertId()
	return nil
}

func (r *ProductRepository) FindAll() ([]models.Product, error) {
	query := SELECT id, name, description, price, stock, created_at FROM products
	
	rows, err := r.db.Query(query)
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	var products []models.Product
	for rows.Next() {
		var p models.Product
		if err := rows.Scan(&p.ID, &p.Name, &p.Description, &p.Price, &p.Stock, &p.CreatedAt); err != nil {
			return nil, err
		}
		products = append(products, p)
	}

	return products, nil
}